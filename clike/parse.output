Conflict in state 253 between rule 39 and token ELSE resolved as shift.
State 266 contains 1 shift/reduce conflict.

Grammar
rule 1    prog -> expr
rule 2    prog -> toplevel_stmt
rule 3    toplevel_stmt -> expr ';'
rule 4    toplevel_stmt -> vardef
rule 5    toplevel_stmt -> fundef
rule 6    toplevel_stmt -> block
rule 7    toplevel_stmt -> if_stmt
rule 8    toplevel_stmt -> while_stmt
rule 9    toplevel_stmt -> do_stmt
rule 10   toplevel_stmt -> for_stmt
rule 11   toplevel_stmt -> cond_stmt
rule 12   toplevel_stmt -> case_stmt
rule 13   toplevel_stmt -> declaration
rule 14   stmt -> expr ';'
rule 15   stmt -> block
rule 16   stmt -> if_stmt
rule 17   stmt -> while_stmt
rule 18   stmt -> do_stmt
rule 19   stmt -> for_stmt
rule 20   stmt -> return_stmt
rule 21   stmt -> break_stmt
rule 22   stmt -> cond_stmt
rule 23   stmt -> case_stmt
rule 24   stmtlst -> stmt
rule 25   stmtlst -> stmt stmtlst
rule 26   vardef -> VAR vardecltor_list ';'
rule 27   vardecltor -> IDENT
rule 28   vardecltor -> IDENT '=' assign_expr
rule 29   vardecltor -> IDENT '[' const_expr ']'
rule 30   vardecltor_list -> vardecltor
rule 31   vardecltor_list -> vardecltor ',' vardecltor_list
rule 32   fundef -> FUN IDENT '(' identlst ')' block
rule 33   fundef -> FUN IDENT '(' ')' block
rule 34   blockbody -> stmtlst
rule 35   blockbody -> vardef blockbody
rule 36   block -> '{' blockbody '}'
rule 37   identlst -> IDENT
rule 38   identlst -> IDENT ',' identlst
rule 39   if_stmt -> IF '(' expr ')' stmt
rule 40   if_stmt -> IF '(' expr ')' stmt ELSE stmt
rule 41   while_stmt -> WHILE '(' expr ')' stmt
rule 42   do_stmt -> DO stmt WHILE '(' expr ')' ';'
rule 43   for_stmt -> FOR '(' expr ';' expr ';' expr ')' stmt
rule 44   return_stmt -> RETURN expr ';'
rule 45   break_stmt -> BREAK ';'
rule 46   cond_stmt -> COND '{' cond_clause_list '}'
rule 47   cond_clause -> expr ':' stmt
rule 48   cond_clause -> ELSE ':' stmt
rule 49   cond_clause_list -> cond_clause
rule 50   cond_clause_list -> cond_clause cond_clause_list
rule 51   case_stmt -> CASE '(' expr ')' '{' case_clause_list '}'
rule 52   case_clause -> assign_expr_list ':' stmt
rule 53   case_clause -> ELSE ':' stmt
rule 54   case_clause_list -> case_clause
rule 55   case_clause_list -> case_clause case_clause_list
rule 56   declaration -> EXTERN type_spec decltor ';'
rule 57   type_spec -> VOID
rule 58   type_spec -> CHAR
rule 59   type_spec -> SIGNED CHAR
rule 60   type_spec -> UNSIGNED CHAR
rule 61   type_spec -> SHORT
rule 62   type_spec -> SIGNED SHORT
rule 63   type_spec -> UNSIGNED SHORT
rule 64   type_spec -> INT
rule 65   type_spec -> SIGNED INT
rule 66   type_spec -> UNSIGNED INT
rule 67   type_spec -> LONG
rule 68   type_spec -> SIGNED LONG
rule 69   type_spec -> UNSIGNED LONG
rule 70   type_spec -> FLOAT
rule 71   type_spec -> DOUBLE
rule 72   decltor -> direct_decltor
rule 73   decltor -> pointer direct_decltor
rule 74   direct_decltor -> IDENT
rule 75   direct_decltor -> '(' decltor ')'
rule 76   direct_decltor -> direct_decltor '[' const_expr ']'
rule 77   direct_decltor -> direct_decltor '[' ']'
rule 78   direct_decltor -> direct_decltor '(' para_type_list ')'
rule 79   pointer -> '*'
rule 80   pointer -> '*' pointer
rule 81   para_type_list -> parameter_list
rule 82   para_type_list -> parameter_list ',' DOTS
rule 83   parameter_list -> para_decl
rule 84   parameter_list -> para_decl ',' parameter_list
rule 85   para_decl -> type_spec decltor
rule 86   para_decl -> type_spec abstract_decltor
rule 87   para_decl -> type_spec
rule 88   abstract_decltor -> pointer
rule 89   abstract_decltor -> direct_abstract_decltor
rule 90   abstract_decltor -> pointer direct_abstract_decltor
rule 91   direct_abstract_decltor -> '(' abstract_decltor ')'
rule 92   direct_abstract_decltor -> '[' ']'
rule 93   direct_abstract_decltor -> '[' const_expr ']'
rule 94   direct_abstract_decltor -> direct_abstract_decltor '[' ']'
rule 95   direct_abstract_decltor -> direct_abstract_decltor '[' const_expr ']'
rule 96   direct_abstract_decltor -> direct_abstract_decltor '(' para_type_list ')'
rule 97   expr -> assign_expr
rule 98   expr -> expr ',' assign_expr
rule 99   assign_expr -> logical_or_expr
rule 100  assign_expr -> unary_expr '=' assign_expr
rule 101  assign_expr -> unary_expr MUL_ASSIGN assign_expr
rule 102  assign_expr -> unary_expr DIV_ASSIGN assign_expr
rule 103  assign_expr -> unary_expr REM_ASSIGN assign_expr
rule 104  assign_expr -> unary_expr ADD_ASSIGN assign_expr
rule 105  assign_expr -> unary_expr SUB_ASSIGN assign_expr
rule 106  assign_expr -> unary_expr LSHIFT_ASSIGN assign_expr
rule 107  assign_expr -> unary_expr RSHIFT_ASSIGN assign_expr
rule 108  assign_expr -> unary_expr AND_ASSIGN assign_expr
rule 109  assign_expr -> unary_expr XOR_ASSIGN assign_expr
rule 110  assign_expr -> unary_expr OR_ASSIGN assign_expr
rule 111  const_expr -> logical_or_expr
rule 112  logical_or_expr -> logical_and_expr
rule 113  logical_or_expr -> logical_or_expr OR logical_and_expr
rule 114  logical_and_expr -> or_expr
rule 115  logical_and_expr -> logical_and_expr AND or_expr
rule 116  or_expr -> xor_expr
rule 117  or_expr -> or_expr '|' xor_expr
rule 118  xor_expr -> and_expr
rule 119  xor_expr -> xor_expr '^' and_expr
rule 120  and_expr -> equality_expr
rule 121  and_expr -> and_expr '&' equality_expr
rule 122  equality_expr -> relation_expr
rule 123  equality_expr -> equality_expr EQ relation_expr
rule 124  equality_expr -> equality_expr NE relation_expr
rule 125  relation_expr -> shift_expr
rule 126  relation_expr -> relation_expr '<' shift_expr
rule 127  relation_expr -> relation_expr '>' shift_expr
rule 128  relation_expr -> relation_expr LE shift_expr
rule 129  relation_expr -> relation_expr GE shift_expr
rule 130  shift_expr -> additive_expr
rule 131  shift_expr -> shift_expr LSHIFT additive_expr
rule 132  shift_expr -> shift_expr RSHIFT additive_expr
rule 133  additive_expr -> multiplic_expr
rule 134  additive_expr -> additive_expr '+' multiplic_expr
rule 135  additive_expr -> additive_expr '-' multiplic_expr
rule 136  multiplic_expr -> cast_expr
rule 137  multiplic_expr -> multiplic_expr '*' cast_expr
rule 138  multiplic_expr -> multiplic_expr '/' cast_expr
rule 139  multiplic_expr -> multiplic_expr '%' cast_expr
rule 140  cast_expr -> unary_expr
rule 141  unary_expr -> postfix_expr
rule 142  unary_expr -> '-' cast_expr
rule 143  unary_expr -> '+' cast_expr
rule 144  unary_expr -> '~' cast_expr
rule 145  unary_expr -> '!' cast_expr
rule 146  unary_expr -> INC unary_expr
rule 147  unary_expr -> DEC unary_expr
rule 148  unary_expr -> '*' cast_expr
rule 149  unary_expr -> '&' cast_expr
rule 150  postfix_expr -> prim_expr
rule 151  postfix_expr -> postfix_expr '(' assign_expr_list ')'
rule 152  postfix_expr -> postfix_expr '(' ')'
rule 153  postfix_expr -> postfix_expr '[' expr ']'
rule 154  postfix_expr -> postfix_expr INC
rule 155  postfix_expr -> postfix_expr DEC
rule 156  prim_expr -> literal
rule 157  prim_expr -> IDENT
rule 158  prim_expr -> '(' expr ')'
rule 159  prim_expr -> FUN '(' identlst ')' '{' blockbody '}'
rule 160  prim_expr -> FUN '(' ')' '{' blockbody '}'
rule 161  prim_expr -> '[' assign_expr_list ']'
rule 162  prim_expr -> '#' '[' assign_expr_list ']'
rule 163  prim_expr -> '\'' prim_expr
rule 164  literal -> STRING
rule 165  literal -> CHAR
rule 166  literal -> NUMBER
rule 167  literal -> TRUE_OBJ
rule 168  literal -> FALSE_OBJ
rule 169  assign_expr_list -> assign_expr
rule 170  assign_expr_list -> assign_expr ',' assign_expr_list

Terminals, with rules where they appear

$ (-1)
'!' (33) 145
'#' (35) 162
'%' (37) 139
'&' (38) 121 149
'\'' (39) 163
'(' (40) 32 33 39 40 41 42 43 51 75 78 91 96 151 152 158 159 160
')' (41) 32 33 39 40 41 42 43 51 75 78 91 96 151 152 158 159 160
'*' (42) 79 80 137 148
'+' (43) 134 143
',' (44) 31 38 82 84 98 170
'-' (45) 135 142
'/' (47) 138
':' (58) 47 48 52 53
';' (59) 3 14 26 42 43 44 45 56
'<' (60) 126
'=' (61) 28 100
'>' (62) 127
'[' (91) 29 76 77 92 93 94 95 153 161 162
']' (93) 29 76 77 92 93 94 95 153 161 162
'^' (94) 119
'{' (123) 36 46 51 159 160
'|' (124) 117
'}' (125) 36 46 51 159 160
'~' (126) 144
error (256)
IDENT (257) 27 28 29 32 33 37 38 74 157
STRING (258) 164
CHAR (259) 58 59 60 165
NUMBER (260) 166
TRUE_OBJ (261) 167
FALSE_OBJ (262) 168
LE (263) 128
GE (264) 129
EQ (265) 123
NE (266) 124
AND (267) 115
OR (268) 113
INC (269) 146 154
DEC (270) 147 155
LSHIFT (271) 131
RSHIFT (272) 132
MUL_ASSIGN (273) 101
DIV_ASSIGN (274) 102
REM_ASSIGN (275) 103
ADD_ASSIGN (276) 104
SUB_ASSIGN (277) 105
LSHIFT_ASSIGN (278) 106
RSHIFT_ASSIGN (279) 107
AND_ASSIGN (280) 108
XOR_ASSIGN (281) 109
OR_ASSIGN (282) 110
VAR (283) 26
FUN (284) 32 33 159 160
IF (285) 39 40
WHILE (286) 41 42
DO (287) 42
FOR (288) 43
RETURN (289) 44
BREAK (290) 45
COND (291) 46
CASE (292) 51
EXTERN (293) 56
VOID (294) 57
SHORT (295) 61 62 63
INT (296) 64 65 66
LONG (297) 67 68 69
FLOAT (298) 70
DOUBLE (299) 71
SIGNED (300) 59 62 65 68
UNSIGNED (301) 60 63 66 69
DOTS (302) 82
LOWER_THAN_ELSE (303)
ELSE (304) 40 48 53

Nonterminals, with rules where they appear

prog (75)
    on left: 1 2
toplevel_stmt (76)
    on left: 3 4 5 6 7 8 9 10 11 12 13, on right: 2
stmt (77)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 24 25 39 40 41
    42 43 47 48 52 53
stmtlst (78)
    on left: 24 25, on right: 25 34
vardef (79)
    on left: 26, on right: 4 35
vardecltor (80)
    on left: 27 28 29, on right: 30 31
vardecltor_list (81)
    on left: 30 31, on right: 26 31
fundef (82)
    on left: 32 33, on right: 5
blockbody (83)
    on left: 34 35, on right: 35 36 159 160
block (84)
    on left: 36, on right: 6 15 32 33
identlst (85)
    on left: 37 38, on right: 32 38 159
if_stmt (86)
    on left: 39 40, on right: 7 16
while_stmt (87)
    on left: 41, on right: 8 17
do_stmt (88)
    on left: 42, on right: 9 18
for_stmt (89)
    on left: 43, on right: 10 19
return_stmt (90)
    on left: 44, on right: 20
break_stmt (91)
    on left: 45, on right: 21
cond_stmt (92)
    on left: 46, on right: 11 22
cond_clause (93)
    on left: 47 48, on right: 49 50
cond_clause_list (94)
    on left: 49 50, on right: 46 50
case_stmt (95)
    on left: 51, on right: 12 23
case_clause (96)
    on left: 52 53, on right: 54 55
case_clause_list (97)
    on left: 54 55, on right: 51 55
declaration (98)
    on left: 56, on right: 13
type_spec (99)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71,
    on right: 56 85 86 87
decltor (100)
    on left: 72 73, on right: 56 75 85
direct_decltor (101)
    on left: 74 75 76 77 78, on right: 72 73 76 77 78
pointer (102)
    on left: 79 80, on right: 73 80 88 90
para_type_list (103)
    on left: 81 82, on right: 78 96
parameter_list (104)
    on left: 83 84, on right: 81 82 84
para_decl (105)
    on left: 85 86 87, on right: 83 84
abstract_decltor (106)
    on left: 88 89 90, on right: 86 91
direct_abstract_decltor (107)
    on left: 91 92 93 94 95 96, on right: 89 90 94 95 96
expr (108)
    on left: 97 98, on right: 1 3 14 39 40 41 42 43 44 47 51 98 153
    158
assign_expr (109)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110,
    on right: 28 97 98 100 101 102 103 104 105 106 107 108 109 110
    169 170
const_expr (110)
    on left: 111, on right: 29 76 93 95
logical_or_expr (111)
    on left: 112 113, on right: 99 111 113
logical_and_expr (112)
    on left: 114 115, on right: 112 113 115
or_expr (113)
    on left: 116 117, on right: 114 115 117
xor_expr (114)
    on left: 118 119, on right: 116 117 119
and_expr (115)
    on left: 120 121, on right: 118 119 121
equality_expr (116)
    on left: 122 123 124, on right: 120 121 123 124
relation_expr (117)
    on left: 125 126 127 128 129, on right: 122 123 124 126 127 128
    129
shift_expr (118)
    on left: 130 131 132, on right: 125 126 127 128 129 131 132
additive_expr (119)
    on left: 133 134 135, on right: 130 131 132 134 135
multiplic_expr (120)
    on left: 136 137 138 139, on right: 133 134 135 137 138 139
cast_expr (121)
    on left: 140, on right: 136 137 138 139 142 143 144 145 148 149
unary_expr (122)
    on left: 141 142 143 144 145 146 147 148 149, on right: 100 101
    102 103 104 105 106 107 108 109 110 140 146 147
postfix_expr (123)
    on left: 150 151 152 153 154 155, on right: 141 151 152 153 154
    155
prim_expr (124)
    on left: 156 157 158 159 160 161 162 163, on right: 150 163
literal (125)
    on left: 164 165 166 167 168, on right: 156
assign_expr_list (126)
    on left: 169 170, on right: 52 151 161 162 170


state 0

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    VAR 	shift, and go to state 9
    FUN 	shift, and go to state 10
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    EXTERN	shift, and go to state 17
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    prog	go to state 314
    toplevel_stmt	go to state 29
    vardef	go to state 30
    fundef	go to state 31
    block	go to state 32
    if_stmt	go to state 33
    while_stmt	go to state 34
    do_stmt	go to state 35
    for_stmt	go to state 36
    cond_stmt	go to state 37
    case_stmt	go to state 38
    declaration	go to state 39
    expr	go to state 40
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 1

    prim_expr  ->  IDENT .   (rule 157)

    $default	reduce using rule 157 (prim_expr)



state 2

    literal  ->  STRING .   (rule 164)

    $default	reduce using rule 164 (literal)



state 3

    literal  ->  CHAR .   (rule 165)

    $default	reduce using rule 165 (literal)



state 4

    literal  ->  NUMBER .   (rule 166)

    $default	reduce using rule 166 (literal)



state 5

    literal  ->  TRUE_OBJ .   (rule 167)

    $default	reduce using rule 167 (literal)



state 6

    literal  ->  FALSE_OBJ .   (rule 168)

    $default	reduce using rule 168 (literal)



state 7

    unary_expr  ->  INC . unary_expr   (rule 146)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    unary_expr	go to state 58
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 8

    unary_expr  ->  DEC . unary_expr   (rule 147)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    unary_expr	go to state 59
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 9

    vardef  ->  VAR . vardecltor_list ';'   (rule 26)

    IDENT	shift, and go to state 60

    vardecltor	go to state 61
    vardecltor_list	go to state 62



state 10

    fundef  ->  FUN . IDENT '(' identlst ')' block   (rule 32)
    fundef  ->  FUN . IDENT '(' ')' block   (rule 33)
    prim_expr  ->  FUN . '(' identlst ')' '{' blockbody '}'   (rule 159)
    prim_expr  ->  FUN . '(' ')' '{' blockbody '}'   (rule 160)

    IDENT	shift, and go to state 63
    '(' 	shift, and go to state 64



state 11

    if_stmt  ->  IF . '(' expr ')' stmt   (rule 39)
    if_stmt  ->  IF . '(' expr ')' stmt ELSE stmt   (rule 40)

    '(' 	shift, and go to state 65



state 12

    while_stmt  ->  WHILE . '(' expr ')' stmt   (rule 41)

    '(' 	shift, and go to state 66



state 13

    do_stmt  ->  DO . stmt WHILE '(' expr ')' ';'   (rule 42)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 69
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 14

    for_stmt  ->  FOR . '(' expr ';' expr ';' expr ')' stmt   (rule 43)

    '(' 	shift, and go to state 80



state 15

    cond_stmt  ->  COND . '{' cond_clause_list '}'   (rule 46)

    '{' 	shift, and go to state 81



state 16

    case_stmt  ->  CASE . '(' expr ')' '{' case_clause_list '}'   (rule 51)

    '(' 	shift, and go to state 82



state 17

    declaration  ->  EXTERN . type_spec decltor ';'   (rule 56)

    CHAR	shift, and go to state 83
    VOID	shift, and go to state 84
    SHORT	shift, and go to state 85
    INT 	shift, and go to state 86
    LONG	shift, and go to state 87
    FLOAT	shift, and go to state 88
    DOUBLE	shift, and go to state 89
    SIGNED	shift, and go to state 90
    UNSIGNED	shift, and go to state 91

    type_spec	go to state 92



state 18

    prim_expr  ->  '[' . assign_expr_list ']'   (rule 161)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 94



state 19

    prim_expr  ->  '(' . expr ')'   (rule 158)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 95
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 20

    block  ->  '{' . blockbody '}'   (rule 36)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    VAR 	shift, and go to state 9
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 96
    stmtlst	go to state 97
    vardef	go to state 98
    blockbody	go to state 99
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 21

    unary_expr  ->  '*' . cast_expr   (rule 148)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 100
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 22

    unary_expr  ->  '&' . cast_expr   (rule 149)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 102
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 23

    unary_expr  ->  '+' . cast_expr   (rule 143)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 103
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 24

    unary_expr  ->  '-' . cast_expr   (rule 142)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 104
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 25

    unary_expr  ->  '~' . cast_expr   (rule 144)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 105
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 26

    unary_expr  ->  '!' . cast_expr   (rule 145)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 106
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 27

    prim_expr  ->  '#' . '[' assign_expr_list ']'   (rule 162)

    '[' 	shift, and go to state 107



state 28

    prim_expr  ->  '\'' . prim_expr   (rule 163)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    prim_expr	go to state 108
    literal	go to state 56



state 29

    prog  ->  toplevel_stmt .   (rule 2)

    $default	reduce using rule 2 (prog)



state 30

    toplevel_stmt  ->  vardef .   (rule 4)

    $default	reduce using rule 4 (toplevel_stmt)



state 31

    toplevel_stmt  ->  fundef .   (rule 5)

    $default	reduce using rule 5 (toplevel_stmt)



state 32

    toplevel_stmt  ->  block .   (rule 6)

    $default	reduce using rule 6 (toplevel_stmt)



state 33

    toplevel_stmt  ->  if_stmt .   (rule 7)

    $default	reduce using rule 7 (toplevel_stmt)



state 34

    toplevel_stmt  ->  while_stmt .   (rule 8)

    $default	reduce using rule 8 (toplevel_stmt)



state 35

    toplevel_stmt  ->  do_stmt .   (rule 9)

    $default	reduce using rule 9 (toplevel_stmt)



state 36

    toplevel_stmt  ->  for_stmt .   (rule 10)

    $default	reduce using rule 10 (toplevel_stmt)



state 37

    toplevel_stmt  ->  cond_stmt .   (rule 11)

    $default	reduce using rule 11 (toplevel_stmt)



state 38

    toplevel_stmt  ->  case_stmt .   (rule 12)

    $default	reduce using rule 12 (toplevel_stmt)



state 39

    toplevel_stmt  ->  declaration .   (rule 13)

    $default	reduce using rule 13 (toplevel_stmt)



state 40

    prog  ->  expr .   (rule 1)
    toplevel_stmt  ->  expr . ';'   (rule 3)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ';' 	shift, and go to state 109
    ',' 	shift, and go to state 110

    $default	reduce using rule 1 (prog)



state 41

    expr  ->  assign_expr .   (rule 97)

    $default	reduce using rule 97 (expr)



state 42

    assign_expr  ->  logical_or_expr .   (rule 99)
    logical_or_expr  ->  logical_or_expr . OR logical_and_expr   (rule 113)

    OR  	shift, and go to state 111

    $default	reduce using rule 99 (assign_expr)



state 43

    logical_or_expr  ->  logical_and_expr .   (rule 112)
    logical_and_expr  ->  logical_and_expr . AND or_expr   (rule 115)

    AND 	shift, and go to state 112

    $default	reduce using rule 112 (logical_or_expr)



state 44

    logical_and_expr  ->  or_expr .   (rule 114)
    or_expr  ->  or_expr . '|' xor_expr   (rule 117)

    '|' 	shift, and go to state 113

    $default	reduce using rule 114 (logical_and_expr)



state 45

    or_expr  ->  xor_expr .   (rule 116)
    xor_expr  ->  xor_expr . '^' and_expr   (rule 119)

    '^' 	shift, and go to state 114

    $default	reduce using rule 116 (or_expr)



state 46

    xor_expr  ->  and_expr .   (rule 118)
    and_expr  ->  and_expr . '&' equality_expr   (rule 121)

    '&' 	shift, and go to state 115

    $default	reduce using rule 118 (xor_expr)



state 47

    and_expr  ->  equality_expr .   (rule 120)
    equality_expr  ->  equality_expr . EQ relation_expr   (rule 123)
    equality_expr  ->  equality_expr . NE relation_expr   (rule 124)

    EQ  	shift, and go to state 116
    NE  	shift, and go to state 117

    $default	reduce using rule 120 (and_expr)



state 48

    equality_expr  ->  relation_expr .   (rule 122)
    relation_expr  ->  relation_expr . '<' shift_expr   (rule 126)
    relation_expr  ->  relation_expr . '>' shift_expr   (rule 127)
    relation_expr  ->  relation_expr . LE shift_expr   (rule 128)
    relation_expr  ->  relation_expr . GE shift_expr   (rule 129)

    LE  	shift, and go to state 118
    GE  	shift, and go to state 119
    '<' 	shift, and go to state 120
    '>' 	shift, and go to state 121

    $default	reduce using rule 122 (equality_expr)



state 49

    relation_expr  ->  shift_expr .   (rule 125)
    shift_expr  ->  shift_expr . LSHIFT additive_expr   (rule 131)
    shift_expr  ->  shift_expr . RSHIFT additive_expr   (rule 132)

    LSHIFT	shift, and go to state 122
    RSHIFT	shift, and go to state 123

    $default	reduce using rule 125 (relation_expr)



state 50

    shift_expr  ->  additive_expr .   (rule 130)
    additive_expr  ->  additive_expr . '+' multiplic_expr   (rule 134)
    additive_expr  ->  additive_expr . '-' multiplic_expr   (rule 135)

    '+' 	shift, and go to state 124
    '-' 	shift, and go to state 125

    $default	reduce using rule 130 (shift_expr)



state 51

    additive_expr  ->  multiplic_expr .   (rule 133)
    multiplic_expr  ->  multiplic_expr . '*' cast_expr   (rule 137)
    multiplic_expr  ->  multiplic_expr . '/' cast_expr   (rule 138)
    multiplic_expr  ->  multiplic_expr . '%' cast_expr   (rule 139)

    '*' 	shift, and go to state 126
    '/' 	shift, and go to state 127
    '%' 	shift, and go to state 128

    $default	reduce using rule 133 (additive_expr)



state 52

    multiplic_expr  ->  cast_expr .   (rule 136)

    $default	reduce using rule 136 (multiplic_expr)



state 53

    assign_expr  ->  unary_expr . '=' assign_expr   (rule 100)
    assign_expr  ->  unary_expr . MUL_ASSIGN assign_expr   (rule 101)
    assign_expr  ->  unary_expr . DIV_ASSIGN assign_expr   (rule 102)
    assign_expr  ->  unary_expr . REM_ASSIGN assign_expr   (rule 103)
    assign_expr  ->  unary_expr . ADD_ASSIGN assign_expr   (rule 104)
    assign_expr  ->  unary_expr . SUB_ASSIGN assign_expr   (rule 105)
    assign_expr  ->  unary_expr . LSHIFT_ASSIGN assign_expr   (rule 106)
    assign_expr  ->  unary_expr . RSHIFT_ASSIGN assign_expr   (rule 107)
    assign_expr  ->  unary_expr . AND_ASSIGN assign_expr   (rule 108)
    assign_expr  ->  unary_expr . XOR_ASSIGN assign_expr   (rule 109)
    assign_expr  ->  unary_expr . OR_ASSIGN assign_expr   (rule 110)
    cast_expr  ->  unary_expr .   (rule 140)

    MUL_ASSIGN	shift, and go to state 129
    DIV_ASSIGN	shift, and go to state 130
    REM_ASSIGN	shift, and go to state 131
    ADD_ASSIGN	shift, and go to state 132
    SUB_ASSIGN	shift, and go to state 133
    LSHIFT_ASSIGN	shift, and go to state 134
    RSHIFT_ASSIGN	shift, and go to state 135
    AND_ASSIGN	shift, and go to state 136
    XOR_ASSIGN	shift, and go to state 137
    OR_ASSIGN	shift, and go to state 138
    '=' 	shift, and go to state 139

    $default	reduce using rule 140 (cast_expr)



state 54

    unary_expr  ->  postfix_expr .   (rule 141)
    postfix_expr  ->  postfix_expr . '(' assign_expr_list ')'   (rule 151)
    postfix_expr  ->  postfix_expr . '(' ')'   (rule 152)
    postfix_expr  ->  postfix_expr . '[' expr ']'   (rule 153)
    postfix_expr  ->  postfix_expr . INC   (rule 154)
    postfix_expr  ->  postfix_expr . DEC   (rule 155)

    INC 	shift, and go to state 140
    DEC 	shift, and go to state 141
    '[' 	shift, and go to state 142
    '(' 	shift, and go to state 143

    $default	reduce using rule 141 (unary_expr)



state 55

    postfix_expr  ->  prim_expr .   (rule 150)

    $default	reduce using rule 150 (postfix_expr)



state 56

    prim_expr  ->  literal .   (rule 156)

    $default	reduce using rule 156 (prim_expr)



state 57

    prim_expr  ->  FUN . '(' identlst ')' '{' blockbody '}'   (rule 159)
    prim_expr  ->  FUN . '(' ')' '{' blockbody '}'   (rule 160)

    '(' 	shift, and go to state 64



state 58

    unary_expr  ->  INC unary_expr .   (rule 146)

    $default	reduce using rule 146 (unary_expr)



state 59

    unary_expr  ->  DEC unary_expr .   (rule 147)

    $default	reduce using rule 147 (unary_expr)



state 60

    vardecltor  ->  IDENT .   (rule 27)
    vardecltor  ->  IDENT . '=' assign_expr   (rule 28)
    vardecltor  ->  IDENT . '[' const_expr ']'   (rule 29)

    '=' 	shift, and go to state 144
    '[' 	shift, and go to state 145

    $default	reduce using rule 27 (vardecltor)



state 61

    vardecltor_list  ->  vardecltor .   (rule 30)
    vardecltor_list  ->  vardecltor . ',' vardecltor_list   (rule 31)

    ',' 	shift, and go to state 146

    $default	reduce using rule 30 (vardecltor_list)



state 62

    vardef  ->  VAR vardecltor_list . ';'   (rule 26)

    ';' 	shift, and go to state 147



state 63

    fundef  ->  FUN IDENT . '(' identlst ')' block   (rule 32)
    fundef  ->  FUN IDENT . '(' ')' block   (rule 33)

    '(' 	shift, and go to state 148



state 64

    prim_expr  ->  FUN '(' . identlst ')' '{' blockbody '}'   (rule 159)
    prim_expr  ->  FUN '(' . ')' '{' blockbody '}'   (rule 160)

    IDENT	shift, and go to state 149
    ')' 	shift, and go to state 150

    identlst	go to state 151



state 65

    if_stmt  ->  IF '(' . expr ')' stmt   (rule 39)
    if_stmt  ->  IF '(' . expr ')' stmt ELSE stmt   (rule 40)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 152
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 66

    while_stmt  ->  WHILE '(' . expr ')' stmt   (rule 41)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 153
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 67

    return_stmt  ->  RETURN . expr ';'   (rule 44)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 154
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 68

    break_stmt  ->  BREAK . ';'   (rule 45)

    ';' 	shift, and go to state 155



state 69

    do_stmt  ->  DO stmt . WHILE '(' expr ')' ';'   (rule 42)

    WHILE	shift, and go to state 156



state 70

    stmt  ->  block .   (rule 15)

    $default	reduce using rule 15 (stmt)



state 71

    stmt  ->  if_stmt .   (rule 16)

    $default	reduce using rule 16 (stmt)



state 72

    stmt  ->  while_stmt .   (rule 17)

    $default	reduce using rule 17 (stmt)



state 73

    stmt  ->  do_stmt .   (rule 18)

    $default	reduce using rule 18 (stmt)



state 74

    stmt  ->  for_stmt .   (rule 19)

    $default	reduce using rule 19 (stmt)



state 75

    stmt  ->  return_stmt .   (rule 20)

    $default	reduce using rule 20 (stmt)



state 76

    stmt  ->  break_stmt .   (rule 21)

    $default	reduce using rule 21 (stmt)



state 77

    stmt  ->  cond_stmt .   (rule 22)

    $default	reduce using rule 22 (stmt)



state 78

    stmt  ->  case_stmt .   (rule 23)

    $default	reduce using rule 23 (stmt)



state 79

    stmt  ->  expr . ';'   (rule 14)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ';' 	shift, and go to state 157
    ',' 	shift, and go to state 110



state 80

    for_stmt  ->  FOR '(' . expr ';' expr ';' expr ')' stmt   (rule 43)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 158
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 81

    cond_stmt  ->  COND '{' . cond_clause_list '}'   (rule 46)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    ELSE	shift, and go to state 159
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cond_clause	go to state 160
    cond_clause_list	go to state 161
    expr	go to state 162
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 82

    case_stmt  ->  CASE '(' . expr ')' '{' case_clause_list '}'   (rule 51)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 163
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 83

    type_spec  ->  CHAR .   (rule 58)

    $default	reduce using rule 58 (type_spec)



state 84

    type_spec  ->  VOID .   (rule 57)

    $default	reduce using rule 57 (type_spec)



state 85

    type_spec  ->  SHORT .   (rule 61)

    $default	reduce using rule 61 (type_spec)



state 86

    type_spec  ->  INT .   (rule 64)

    $default	reduce using rule 64 (type_spec)



state 87

    type_spec  ->  LONG .   (rule 67)

    $default	reduce using rule 67 (type_spec)



state 88

    type_spec  ->  FLOAT .   (rule 70)

    $default	reduce using rule 70 (type_spec)



state 89

    type_spec  ->  DOUBLE .   (rule 71)

    $default	reduce using rule 71 (type_spec)



state 90

    type_spec  ->  SIGNED . CHAR   (rule 59)
    type_spec  ->  SIGNED . SHORT   (rule 62)
    type_spec  ->  SIGNED . INT   (rule 65)
    type_spec  ->  SIGNED . LONG   (rule 68)

    CHAR	shift, and go to state 164
    SHORT	shift, and go to state 165
    INT 	shift, and go to state 166
    LONG	shift, and go to state 167



state 91

    type_spec  ->  UNSIGNED . CHAR   (rule 60)
    type_spec  ->  UNSIGNED . SHORT   (rule 63)
    type_spec  ->  UNSIGNED . INT   (rule 66)
    type_spec  ->  UNSIGNED . LONG   (rule 69)

    CHAR	shift, and go to state 168
    SHORT	shift, and go to state 169
    INT 	shift, and go to state 170
    LONG	shift, and go to state 171



state 92

    declaration  ->  EXTERN type_spec . decltor ';'   (rule 56)

    IDENT	shift, and go to state 172
    '(' 	shift, and go to state 173
    '*' 	shift, and go to state 174

    decltor	go to state 175
    direct_decltor	go to state 176
    pointer	go to state 177



state 93

    assign_expr_list  ->  assign_expr .   (rule 169)
    assign_expr_list  ->  assign_expr . ',' assign_expr_list   (rule 170)

    ',' 	shift, and go to state 178

    $default	reduce using rule 169 (assign_expr_list)



state 94

    prim_expr  ->  '[' assign_expr_list . ']'   (rule 161)

    ']' 	shift, and go to state 179



state 95

    expr  ->  expr . ',' assign_expr   (rule 98)
    prim_expr  ->  '(' expr . ')'   (rule 158)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 180



state 96

    stmtlst  ->  stmt .   (rule 24)
    stmtlst  ->  stmt . stmtlst   (rule 25)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    $default	reduce using rule 24 (stmtlst)

    stmt	go to state 96
    stmtlst	go to state 181
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 97

    blockbody  ->  stmtlst .   (rule 34)

    $default	reduce using rule 34 (blockbody)



state 98

    blockbody  ->  vardef . blockbody   (rule 35)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    VAR 	shift, and go to state 9
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 96
    stmtlst	go to state 97
    vardef	go to state 98
    blockbody	go to state 182
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 99

    block  ->  '{' blockbody . '}'   (rule 36)

    '}' 	shift, and go to state 183



state 100

    unary_expr  ->  '*' cast_expr .   (rule 148)

    $default	reduce using rule 148 (unary_expr)



state 101

    cast_expr  ->  unary_expr .   (rule 140)

    $default	reduce using rule 140 (cast_expr)



state 102

    unary_expr  ->  '&' cast_expr .   (rule 149)

    $default	reduce using rule 149 (unary_expr)



state 103

    unary_expr  ->  '+' cast_expr .   (rule 143)

    $default	reduce using rule 143 (unary_expr)



state 104

    unary_expr  ->  '-' cast_expr .   (rule 142)

    $default	reduce using rule 142 (unary_expr)



state 105

    unary_expr  ->  '~' cast_expr .   (rule 144)

    $default	reduce using rule 144 (unary_expr)



state 106

    unary_expr  ->  '!' cast_expr .   (rule 145)

    $default	reduce using rule 145 (unary_expr)



state 107

    prim_expr  ->  '#' '[' . assign_expr_list ']'   (rule 162)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 184



state 108

    prim_expr  ->  '\'' prim_expr .   (rule 163)

    $default	reduce using rule 163 (prim_expr)



state 109

    toplevel_stmt  ->  expr ';' .   (rule 3)

    $default	reduce using rule 3 (toplevel_stmt)



state 110

    expr  ->  expr ',' . assign_expr   (rule 98)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 185
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 111

    logical_or_expr  ->  logical_or_expr OR . logical_and_expr   (rule 113)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    logical_and_expr	go to state 186
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 112

    logical_and_expr  ->  logical_and_expr AND . or_expr   (rule 115)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    or_expr	go to state 187
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 113

    or_expr  ->  or_expr '|' . xor_expr   (rule 117)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    xor_expr	go to state 188
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 114

    xor_expr  ->  xor_expr '^' . and_expr   (rule 119)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    and_expr	go to state 189
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 115

    and_expr  ->  and_expr '&' . equality_expr   (rule 121)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    equality_expr	go to state 190
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 116

    equality_expr  ->  equality_expr EQ . relation_expr   (rule 123)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    relation_expr	go to state 191
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 117

    equality_expr  ->  equality_expr NE . relation_expr   (rule 124)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    relation_expr	go to state 192
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 118

    relation_expr  ->  relation_expr LE . shift_expr   (rule 128)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    shift_expr	go to state 193
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 119

    relation_expr  ->  relation_expr GE . shift_expr   (rule 129)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    shift_expr	go to state 194
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 120

    relation_expr  ->  relation_expr '<' . shift_expr   (rule 126)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    shift_expr	go to state 195
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 121

    relation_expr  ->  relation_expr '>' . shift_expr   (rule 127)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    shift_expr	go to state 196
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 122

    shift_expr  ->  shift_expr LSHIFT . additive_expr   (rule 131)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    additive_expr	go to state 197
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 123

    shift_expr  ->  shift_expr RSHIFT . additive_expr   (rule 132)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    additive_expr	go to state 198
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 124

    additive_expr  ->  additive_expr '+' . multiplic_expr   (rule 134)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    multiplic_expr	go to state 199
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 125

    additive_expr  ->  additive_expr '-' . multiplic_expr   (rule 135)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    multiplic_expr	go to state 200
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 126

    multiplic_expr  ->  multiplic_expr '*' . cast_expr   (rule 137)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 201
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 127

    multiplic_expr  ->  multiplic_expr '/' . cast_expr   (rule 138)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 202
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 128

    multiplic_expr  ->  multiplic_expr '%' . cast_expr   (rule 139)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    cast_expr	go to state 203
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 129

    assign_expr  ->  unary_expr MUL_ASSIGN . assign_expr   (rule 101)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 204
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 130

    assign_expr  ->  unary_expr DIV_ASSIGN . assign_expr   (rule 102)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 205
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 131

    assign_expr  ->  unary_expr REM_ASSIGN . assign_expr   (rule 103)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 206
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 132

    assign_expr  ->  unary_expr ADD_ASSIGN . assign_expr   (rule 104)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 207
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 133

    assign_expr  ->  unary_expr SUB_ASSIGN . assign_expr   (rule 105)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 208
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 134

    assign_expr  ->  unary_expr LSHIFT_ASSIGN . assign_expr   (rule 106)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 209
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 135

    assign_expr  ->  unary_expr RSHIFT_ASSIGN . assign_expr   (rule 107)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 210
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 136

    assign_expr  ->  unary_expr AND_ASSIGN . assign_expr   (rule 108)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 211
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 137

    assign_expr  ->  unary_expr XOR_ASSIGN . assign_expr   (rule 109)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 212
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 138

    assign_expr  ->  unary_expr OR_ASSIGN . assign_expr   (rule 110)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 213
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 139

    assign_expr  ->  unary_expr '=' . assign_expr   (rule 100)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 214
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 140

    postfix_expr  ->  postfix_expr INC .   (rule 154)

    $default	reduce using rule 154 (postfix_expr)



state 141

    postfix_expr  ->  postfix_expr DEC .   (rule 155)

    $default	reduce using rule 155 (postfix_expr)



state 142

    postfix_expr  ->  postfix_expr '[' . expr ']'   (rule 153)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 215
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 143

    postfix_expr  ->  postfix_expr '(' . assign_expr_list ')'   (rule 151)
    postfix_expr  ->  postfix_expr '(' . ')'   (rule 152)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    ')' 	shift, and go to state 216
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 217



state 144

    vardecltor  ->  IDENT '=' . assign_expr   (rule 28)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 218
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 145

    vardecltor  ->  IDENT '[' . const_expr ']'   (rule 29)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    const_expr	go to state 219
    logical_or_expr	go to state 220
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 146

    vardecltor_list  ->  vardecltor ',' . vardecltor_list   (rule 31)

    IDENT	shift, and go to state 60

    vardecltor	go to state 61
    vardecltor_list	go to state 221



state 147

    vardef  ->  VAR vardecltor_list ';' .   (rule 26)

    $default	reduce using rule 26 (vardef)



state 148

    fundef  ->  FUN IDENT '(' . identlst ')' block   (rule 32)
    fundef  ->  FUN IDENT '(' . ')' block   (rule 33)

    IDENT	shift, and go to state 149
    ')' 	shift, and go to state 222

    identlst	go to state 223



state 149

    identlst  ->  IDENT .   (rule 37)
    identlst  ->  IDENT . ',' identlst   (rule 38)

    ',' 	shift, and go to state 224

    $default	reduce using rule 37 (identlst)



state 150

    prim_expr  ->  FUN '(' ')' . '{' blockbody '}'   (rule 160)

    '{' 	shift, and go to state 225



state 151

    prim_expr  ->  FUN '(' identlst . ')' '{' blockbody '}'   (rule 159)

    ')' 	shift, and go to state 226



state 152

    if_stmt  ->  IF '(' expr . ')' stmt   (rule 39)
    if_stmt  ->  IF '(' expr . ')' stmt ELSE stmt   (rule 40)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 227



state 153

    while_stmt  ->  WHILE '(' expr . ')' stmt   (rule 41)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 228



state 154

    return_stmt  ->  RETURN expr . ';'   (rule 44)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ';' 	shift, and go to state 229
    ',' 	shift, and go to state 110



state 155

    break_stmt  ->  BREAK ';' .   (rule 45)

    $default	reduce using rule 45 (break_stmt)



state 156

    do_stmt  ->  DO stmt WHILE . '(' expr ')' ';'   (rule 42)

    '(' 	shift, and go to state 230



state 157

    stmt  ->  expr ';' .   (rule 14)

    $default	reduce using rule 14 (stmt)



state 158

    for_stmt  ->  FOR '(' expr . ';' expr ';' expr ')' stmt   (rule 43)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ';' 	shift, and go to state 231
    ',' 	shift, and go to state 110



state 159

    cond_clause  ->  ELSE . ':' stmt   (rule 48)

    ':' 	shift, and go to state 232



state 160

    cond_clause_list  ->  cond_clause .   (rule 49)
    cond_clause_list  ->  cond_clause . cond_clause_list   (rule 50)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    ELSE	shift, and go to state 159
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    $default	reduce using rule 49 (cond_clause_list)

    cond_clause	go to state 160
    cond_clause_list	go to state 233
    expr	go to state 162
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 161

    cond_stmt  ->  COND '{' cond_clause_list . '}'   (rule 46)

    '}' 	shift, and go to state 234



state 162

    cond_clause  ->  expr . ':' stmt   (rule 47)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ':' 	shift, and go to state 235



state 163

    case_stmt  ->  CASE '(' expr . ')' '{' case_clause_list '}'   (rule 51)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 236



state 164

    type_spec  ->  SIGNED CHAR .   (rule 59)

    $default	reduce using rule 59 (type_spec)



state 165

    type_spec  ->  SIGNED SHORT .   (rule 62)

    $default	reduce using rule 62 (type_spec)



state 166

    type_spec  ->  SIGNED INT .   (rule 65)

    $default	reduce using rule 65 (type_spec)



state 167

    type_spec  ->  SIGNED LONG .   (rule 68)

    $default	reduce using rule 68 (type_spec)



state 168

    type_spec  ->  UNSIGNED CHAR .   (rule 60)

    $default	reduce using rule 60 (type_spec)



state 169

    type_spec  ->  UNSIGNED SHORT .   (rule 63)

    $default	reduce using rule 63 (type_spec)



state 170

    type_spec  ->  UNSIGNED INT .   (rule 66)

    $default	reduce using rule 66 (type_spec)



state 171

    type_spec  ->  UNSIGNED LONG .   (rule 69)

    $default	reduce using rule 69 (type_spec)



state 172

    direct_decltor  ->  IDENT .   (rule 74)

    $default	reduce using rule 74 (direct_decltor)



state 173

    direct_decltor  ->  '(' . decltor ')'   (rule 75)

    IDENT	shift, and go to state 172
    '(' 	shift, and go to state 173
    '*' 	shift, and go to state 174

    decltor	go to state 237
    direct_decltor	go to state 176
    pointer	go to state 177



state 174

    pointer  ->  '*' .   (rule 79)
    pointer  ->  '*' . pointer   (rule 80)

    '*' 	shift, and go to state 174

    $default	reduce using rule 79 (pointer)

    pointer	go to state 238



state 175

    declaration  ->  EXTERN type_spec decltor . ';'   (rule 56)

    ';' 	shift, and go to state 239



state 176

    decltor  ->  direct_decltor .   (rule 72)
    direct_decltor  ->  direct_decltor . '[' const_expr ']'   (rule 76)
    direct_decltor  ->  direct_decltor . '[' ']'   (rule 77)
    direct_decltor  ->  direct_decltor . '(' para_type_list ')'   (rule 78)

    '[' 	shift, and go to state 240
    '(' 	shift, and go to state 241

    $default	reduce using rule 72 (decltor)



state 177

    decltor  ->  pointer . direct_decltor   (rule 73)

    IDENT	shift, and go to state 172
    '(' 	shift, and go to state 173

    direct_decltor	go to state 242



state 178

    assign_expr_list  ->  assign_expr ',' . assign_expr_list   (rule 170)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 243



state 179

    prim_expr  ->  '[' assign_expr_list ']' .   (rule 161)

    $default	reduce using rule 161 (prim_expr)



state 180

    prim_expr  ->  '(' expr ')' .   (rule 158)

    $default	reduce using rule 158 (prim_expr)



state 181

    stmtlst  ->  stmt stmtlst .   (rule 25)

    $default	reduce using rule 25 (stmtlst)



state 182

    blockbody  ->  vardef blockbody .   (rule 35)

    $default	reduce using rule 35 (blockbody)



state 183

    block  ->  '{' blockbody '}' .   (rule 36)

    $default	reduce using rule 36 (block)



state 184

    prim_expr  ->  '#' '[' assign_expr_list . ']'   (rule 162)

    ']' 	shift, and go to state 244



state 185

    expr  ->  expr ',' assign_expr .   (rule 98)

    $default	reduce using rule 98 (expr)



state 186

    logical_or_expr  ->  logical_or_expr OR logical_and_expr .   (rule 113)
    logical_and_expr  ->  logical_and_expr . AND or_expr   (rule 115)

    AND 	shift, and go to state 112

    $default	reduce using rule 113 (logical_or_expr)



state 187

    logical_and_expr  ->  logical_and_expr AND or_expr .   (rule 115)
    or_expr  ->  or_expr . '|' xor_expr   (rule 117)

    '|' 	shift, and go to state 113

    $default	reduce using rule 115 (logical_and_expr)



state 188

    or_expr  ->  or_expr '|' xor_expr .   (rule 117)
    xor_expr  ->  xor_expr . '^' and_expr   (rule 119)

    '^' 	shift, and go to state 114

    $default	reduce using rule 117 (or_expr)



state 189

    xor_expr  ->  xor_expr '^' and_expr .   (rule 119)
    and_expr  ->  and_expr . '&' equality_expr   (rule 121)

    '&' 	shift, and go to state 115

    $default	reduce using rule 119 (xor_expr)



state 190

    and_expr  ->  and_expr '&' equality_expr .   (rule 121)
    equality_expr  ->  equality_expr . EQ relation_expr   (rule 123)
    equality_expr  ->  equality_expr . NE relation_expr   (rule 124)

    EQ  	shift, and go to state 116
    NE  	shift, and go to state 117

    $default	reduce using rule 121 (and_expr)



state 191

    equality_expr  ->  equality_expr EQ relation_expr .   (rule 123)
    relation_expr  ->  relation_expr . '<' shift_expr   (rule 126)
    relation_expr  ->  relation_expr . '>' shift_expr   (rule 127)
    relation_expr  ->  relation_expr . LE shift_expr   (rule 128)
    relation_expr  ->  relation_expr . GE shift_expr   (rule 129)

    LE  	shift, and go to state 118
    GE  	shift, and go to state 119
    '<' 	shift, and go to state 120
    '>' 	shift, and go to state 121

    $default	reduce using rule 123 (equality_expr)



state 192

    equality_expr  ->  equality_expr NE relation_expr .   (rule 124)
    relation_expr  ->  relation_expr . '<' shift_expr   (rule 126)
    relation_expr  ->  relation_expr . '>' shift_expr   (rule 127)
    relation_expr  ->  relation_expr . LE shift_expr   (rule 128)
    relation_expr  ->  relation_expr . GE shift_expr   (rule 129)

    LE  	shift, and go to state 118
    GE  	shift, and go to state 119
    '<' 	shift, and go to state 120
    '>' 	shift, and go to state 121

    $default	reduce using rule 124 (equality_expr)



state 193

    relation_expr  ->  relation_expr LE shift_expr .   (rule 128)
    shift_expr  ->  shift_expr . LSHIFT additive_expr   (rule 131)
    shift_expr  ->  shift_expr . RSHIFT additive_expr   (rule 132)

    LSHIFT	shift, and go to state 122
    RSHIFT	shift, and go to state 123

    $default	reduce using rule 128 (relation_expr)



state 194

    relation_expr  ->  relation_expr GE shift_expr .   (rule 129)
    shift_expr  ->  shift_expr . LSHIFT additive_expr   (rule 131)
    shift_expr  ->  shift_expr . RSHIFT additive_expr   (rule 132)

    LSHIFT	shift, and go to state 122
    RSHIFT	shift, and go to state 123

    $default	reduce using rule 129 (relation_expr)



state 195

    relation_expr  ->  relation_expr '<' shift_expr .   (rule 126)
    shift_expr  ->  shift_expr . LSHIFT additive_expr   (rule 131)
    shift_expr  ->  shift_expr . RSHIFT additive_expr   (rule 132)

    LSHIFT	shift, and go to state 122
    RSHIFT	shift, and go to state 123

    $default	reduce using rule 126 (relation_expr)



state 196

    relation_expr  ->  relation_expr '>' shift_expr .   (rule 127)
    shift_expr  ->  shift_expr . LSHIFT additive_expr   (rule 131)
    shift_expr  ->  shift_expr . RSHIFT additive_expr   (rule 132)

    LSHIFT	shift, and go to state 122
    RSHIFT	shift, and go to state 123

    $default	reduce using rule 127 (relation_expr)



state 197

    shift_expr  ->  shift_expr LSHIFT additive_expr .   (rule 131)
    additive_expr  ->  additive_expr . '+' multiplic_expr   (rule 134)
    additive_expr  ->  additive_expr . '-' multiplic_expr   (rule 135)

    '+' 	shift, and go to state 124
    '-' 	shift, and go to state 125

    $default	reduce using rule 131 (shift_expr)



state 198

    shift_expr  ->  shift_expr RSHIFT additive_expr .   (rule 132)
    additive_expr  ->  additive_expr . '+' multiplic_expr   (rule 134)
    additive_expr  ->  additive_expr . '-' multiplic_expr   (rule 135)

    '+' 	shift, and go to state 124
    '-' 	shift, and go to state 125

    $default	reduce using rule 132 (shift_expr)



state 199

    additive_expr  ->  additive_expr '+' multiplic_expr .   (rule 134)
    multiplic_expr  ->  multiplic_expr . '*' cast_expr   (rule 137)
    multiplic_expr  ->  multiplic_expr . '/' cast_expr   (rule 138)
    multiplic_expr  ->  multiplic_expr . '%' cast_expr   (rule 139)

    '*' 	shift, and go to state 126
    '/' 	shift, and go to state 127
    '%' 	shift, and go to state 128

    $default	reduce using rule 134 (additive_expr)



state 200

    additive_expr  ->  additive_expr '-' multiplic_expr .   (rule 135)
    multiplic_expr  ->  multiplic_expr . '*' cast_expr   (rule 137)
    multiplic_expr  ->  multiplic_expr . '/' cast_expr   (rule 138)
    multiplic_expr  ->  multiplic_expr . '%' cast_expr   (rule 139)

    '*' 	shift, and go to state 126
    '/' 	shift, and go to state 127
    '%' 	shift, and go to state 128

    $default	reduce using rule 135 (additive_expr)



state 201

    multiplic_expr  ->  multiplic_expr '*' cast_expr .   (rule 137)

    $default	reduce using rule 137 (multiplic_expr)



state 202

    multiplic_expr  ->  multiplic_expr '/' cast_expr .   (rule 138)

    $default	reduce using rule 138 (multiplic_expr)



state 203

    multiplic_expr  ->  multiplic_expr '%' cast_expr .   (rule 139)

    $default	reduce using rule 139 (multiplic_expr)



state 204

    assign_expr  ->  unary_expr MUL_ASSIGN assign_expr .   (rule 101)

    $default	reduce using rule 101 (assign_expr)



state 205

    assign_expr  ->  unary_expr DIV_ASSIGN assign_expr .   (rule 102)

    $default	reduce using rule 102 (assign_expr)



state 206

    assign_expr  ->  unary_expr REM_ASSIGN assign_expr .   (rule 103)

    $default	reduce using rule 103 (assign_expr)



state 207

    assign_expr  ->  unary_expr ADD_ASSIGN assign_expr .   (rule 104)

    $default	reduce using rule 104 (assign_expr)



state 208

    assign_expr  ->  unary_expr SUB_ASSIGN assign_expr .   (rule 105)

    $default	reduce using rule 105 (assign_expr)



state 209

    assign_expr  ->  unary_expr LSHIFT_ASSIGN assign_expr .   (rule 106)

    $default	reduce using rule 106 (assign_expr)



state 210

    assign_expr  ->  unary_expr RSHIFT_ASSIGN assign_expr .   (rule 107)

    $default	reduce using rule 107 (assign_expr)



state 211

    assign_expr  ->  unary_expr AND_ASSIGN assign_expr .   (rule 108)

    $default	reduce using rule 108 (assign_expr)



state 212

    assign_expr  ->  unary_expr XOR_ASSIGN assign_expr .   (rule 109)

    $default	reduce using rule 109 (assign_expr)



state 213

    assign_expr  ->  unary_expr OR_ASSIGN assign_expr .   (rule 110)

    $default	reduce using rule 110 (assign_expr)



state 214

    assign_expr  ->  unary_expr '=' assign_expr .   (rule 100)

    $default	reduce using rule 100 (assign_expr)



state 215

    expr  ->  expr . ',' assign_expr   (rule 98)
    postfix_expr  ->  postfix_expr '[' expr . ']'   (rule 153)

    ']' 	shift, and go to state 245
    ',' 	shift, and go to state 110



state 216

    postfix_expr  ->  postfix_expr '(' ')' .   (rule 152)

    $default	reduce using rule 152 (postfix_expr)



state 217

    postfix_expr  ->  postfix_expr '(' assign_expr_list . ')'   (rule 151)

    ')' 	shift, and go to state 246



state 218

    vardecltor  ->  IDENT '=' assign_expr .   (rule 28)

    $default	reduce using rule 28 (vardecltor)



state 219

    vardecltor  ->  IDENT '[' const_expr . ']'   (rule 29)

    ']' 	shift, and go to state 247



state 220

    const_expr  ->  logical_or_expr .   (rule 111)
    logical_or_expr  ->  logical_or_expr . OR logical_and_expr   (rule 113)

    OR  	shift, and go to state 111

    $default	reduce using rule 111 (const_expr)



state 221

    vardecltor_list  ->  vardecltor ',' vardecltor_list .   (rule 31)

    $default	reduce using rule 31 (vardecltor_list)



state 222

    fundef  ->  FUN IDENT '(' ')' . block   (rule 33)

    '{' 	shift, and go to state 20

    block	go to state 248



state 223

    fundef  ->  FUN IDENT '(' identlst . ')' block   (rule 32)

    ')' 	shift, and go to state 249



state 224

    identlst  ->  IDENT ',' . identlst   (rule 38)

    IDENT	shift, and go to state 149

    identlst	go to state 250



state 225

    prim_expr  ->  FUN '(' ')' '{' . blockbody '}'   (rule 160)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    VAR 	shift, and go to state 9
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 96
    stmtlst	go to state 97
    vardef	go to state 98
    blockbody	go to state 251
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 226

    prim_expr  ->  FUN '(' identlst ')' . '{' blockbody '}'   (rule 159)

    '{' 	shift, and go to state 252



state 227

    if_stmt  ->  IF '(' expr ')' . stmt   (rule 39)
    if_stmt  ->  IF '(' expr ')' . stmt ELSE stmt   (rule 40)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 253
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 228

    while_stmt  ->  WHILE '(' expr ')' . stmt   (rule 41)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 254
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 229

    return_stmt  ->  RETURN expr ';' .   (rule 44)

    $default	reduce using rule 44 (return_stmt)



state 230

    do_stmt  ->  DO stmt WHILE '(' . expr ')' ';'   (rule 42)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 255
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 231

    for_stmt  ->  FOR '(' expr ';' . expr ';' expr ')' stmt   (rule 43)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 256
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 232

    cond_clause  ->  ELSE ':' . stmt   (rule 48)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 257
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 233

    cond_clause_list  ->  cond_clause cond_clause_list .   (rule 50)

    $default	reduce using rule 50 (cond_clause_list)



state 234

    cond_stmt  ->  COND '{' cond_clause_list '}' .   (rule 46)

    $default	reduce using rule 46 (cond_stmt)



state 235

    cond_clause  ->  expr ':' . stmt   (rule 47)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 258
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 236

    case_stmt  ->  CASE '(' expr ')' . '{' case_clause_list '}'   (rule 51)

    '{' 	shift, and go to state 259



state 237

    direct_decltor  ->  '(' decltor . ')'   (rule 75)

    ')' 	shift, and go to state 260



state 238

    pointer  ->  '*' pointer .   (rule 80)

    $default	reduce using rule 80 (pointer)



state 239

    declaration  ->  EXTERN type_spec decltor ';' .   (rule 56)

    $default	reduce using rule 56 (declaration)



state 240

    direct_decltor  ->  direct_decltor '[' . const_expr ']'   (rule 76)
    direct_decltor  ->  direct_decltor '[' . ']'   (rule 77)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    ']' 	shift, and go to state 261
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    const_expr	go to state 262
    logical_or_expr	go to state 220
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 241

    direct_decltor  ->  direct_decltor '(' . para_type_list ')'   (rule 78)

    CHAR	shift, and go to state 83
    VOID	shift, and go to state 84
    SHORT	shift, and go to state 85
    INT 	shift, and go to state 86
    LONG	shift, and go to state 87
    FLOAT	shift, and go to state 88
    DOUBLE	shift, and go to state 89
    SIGNED	shift, and go to state 90
    UNSIGNED	shift, and go to state 91

    type_spec	go to state 263
    para_type_list	go to state 264
    parameter_list	go to state 265
    para_decl	go to state 266



state 242

    decltor  ->  pointer direct_decltor .   (rule 73)
    direct_decltor  ->  direct_decltor . '[' const_expr ']'   (rule 76)
    direct_decltor  ->  direct_decltor . '[' ']'   (rule 77)
    direct_decltor  ->  direct_decltor . '(' para_type_list ')'   (rule 78)

    '[' 	shift, and go to state 240
    '(' 	shift, and go to state 241

    $default	reduce using rule 73 (decltor)



state 243

    assign_expr_list  ->  assign_expr ',' assign_expr_list .   (rule 170)

    $default	reduce using rule 170 (assign_expr_list)



state 244

    prim_expr  ->  '#' '[' assign_expr_list ']' .   (rule 162)

    $default	reduce using rule 162 (prim_expr)



state 245

    postfix_expr  ->  postfix_expr '[' expr ']' .   (rule 153)

    $default	reduce using rule 153 (postfix_expr)



state 246

    postfix_expr  ->  postfix_expr '(' assign_expr_list ')' .   (rule 151)

    $default	reduce using rule 151 (postfix_expr)



state 247

    vardecltor  ->  IDENT '[' const_expr ']' .   (rule 29)

    $default	reduce using rule 29 (vardecltor)



state 248

    fundef  ->  FUN IDENT '(' ')' block .   (rule 33)

    $default	reduce using rule 33 (fundef)



state 249

    fundef  ->  FUN IDENT '(' identlst ')' . block   (rule 32)

    '{' 	shift, and go to state 20

    block	go to state 267



state 250

    identlst  ->  IDENT ',' identlst .   (rule 38)

    $default	reduce using rule 38 (identlst)



state 251

    prim_expr  ->  FUN '(' ')' '{' blockbody . '}'   (rule 160)

    '}' 	shift, and go to state 268



state 252

    prim_expr  ->  FUN '(' identlst ')' '{' . blockbody '}'   (rule 159)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    VAR 	shift, and go to state 9
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 96
    stmtlst	go to state 97
    vardef	go to state 98
    blockbody	go to state 269
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 253

    if_stmt  ->  IF '(' expr ')' stmt .   (rule 39)
    if_stmt  ->  IF '(' expr ')' stmt . ELSE stmt   (rule 40)

    ELSE	shift, and go to state 270

    $default	reduce using rule 39 (if_stmt)



state 254

    while_stmt  ->  WHILE '(' expr ')' stmt .   (rule 41)

    $default	reduce using rule 41 (while_stmt)



state 255

    do_stmt  ->  DO stmt WHILE '(' expr . ')' ';'   (rule 42)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 271



state 256

    for_stmt  ->  FOR '(' expr ';' expr . ';' expr ')' stmt   (rule 43)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ';' 	shift, and go to state 272
    ',' 	shift, and go to state 110



state 257

    cond_clause  ->  ELSE ':' stmt .   (rule 48)

    $default	reduce using rule 48 (cond_clause)



state 258

    cond_clause  ->  expr ':' stmt .   (rule 47)

    $default	reduce using rule 47 (cond_clause)



state 259

    case_stmt  ->  CASE '(' expr ')' '{' . case_clause_list '}'   (rule 51)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    ELSE	shift, and go to state 273
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    case_clause	go to state 274
    case_clause_list	go to state 275
    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 276



state 260

    direct_decltor  ->  '(' decltor ')' .   (rule 75)

    $default	reduce using rule 75 (direct_decltor)



state 261

    direct_decltor  ->  direct_decltor '[' ']' .   (rule 77)

    $default	reduce using rule 77 (direct_decltor)



state 262

    direct_decltor  ->  direct_decltor '[' const_expr . ']'   (rule 76)

    ']' 	shift, and go to state 277



state 263

    para_decl  ->  type_spec . decltor   (rule 85)
    para_decl  ->  type_spec . abstract_decltor   (rule 86)
    para_decl  ->  type_spec .   (rule 87)

    IDENT	shift, and go to state 172
    '[' 	shift, and go to state 278
    '(' 	shift, and go to state 279
    '*' 	shift, and go to state 174

    $default	reduce using rule 87 (para_decl)

    decltor	go to state 280
    direct_decltor	go to state 176
    pointer	go to state 281
    abstract_decltor	go to state 282
    direct_abstract_decltor	go to state 283



state 264

    direct_decltor  ->  direct_decltor '(' para_type_list . ')'   (rule 78)

    ')' 	shift, and go to state 284



state 265

    para_type_list  ->  parameter_list .   (rule 81)
    para_type_list  ->  parameter_list . ',' DOTS   (rule 82)

    ',' 	shift, and go to state 285

    $default	reduce using rule 81 (para_type_list)



state 266

    parameter_list  ->  para_decl .   (rule 83)
    parameter_list  ->  para_decl . ',' parameter_list   (rule 84)

    ',' 	shift, and go to state 286

    ',' 	[reduce using rule 83 (parameter_list)]
    $default	reduce using rule 83 (parameter_list)



state 267

    fundef  ->  FUN IDENT '(' identlst ')' block .   (rule 32)

    $default	reduce using rule 32 (fundef)



state 268

    prim_expr  ->  FUN '(' ')' '{' blockbody '}' .   (rule 160)

    $default	reduce using rule 160 (prim_expr)



state 269

    prim_expr  ->  FUN '(' identlst ')' '{' blockbody . '}'   (rule 159)

    '}' 	shift, and go to state 287



state 270

    if_stmt  ->  IF '(' expr ')' stmt ELSE . stmt   (rule 40)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 288
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 271

    do_stmt  ->  DO stmt WHILE '(' expr ')' . ';'   (rule 42)

    ';' 	shift, and go to state 289



state 272

    for_stmt  ->  FOR '(' expr ';' expr ';' . expr ')' stmt   (rule 43)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    expr	go to state 290
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 273

    case_clause  ->  ELSE . ':' stmt   (rule 53)

    ':' 	shift, and go to state 291



state 274

    case_clause_list  ->  case_clause .   (rule 54)
    case_clause_list  ->  case_clause . case_clause_list   (rule 55)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    ELSE	shift, and go to state 273
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    $default	reduce using rule 54 (case_clause_list)

    case_clause	go to state 274
    case_clause_list	go to state 292
    assign_expr	go to state 93
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56
    assign_expr_list	go to state 276



state 275

    case_stmt  ->  CASE '(' expr ')' '{' case_clause_list . '}'   (rule 51)

    '}' 	shift, and go to state 293



state 276

    case_clause  ->  assign_expr_list . ':' stmt   (rule 52)

    ':' 	shift, and go to state 294



state 277

    direct_decltor  ->  direct_decltor '[' const_expr ']' .   (rule 76)

    $default	reduce using rule 76 (direct_decltor)



state 278

    direct_abstract_decltor  ->  '[' . ']'   (rule 92)
    direct_abstract_decltor  ->  '[' . const_expr ']'   (rule 93)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    ']' 	shift, and go to state 295
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    const_expr	go to state 296
    logical_or_expr	go to state 220
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 279

    direct_decltor  ->  '(' . decltor ')'   (rule 75)
    direct_abstract_decltor  ->  '(' . abstract_decltor ')'   (rule 91)

    IDENT	shift, and go to state 172
    '[' 	shift, and go to state 278
    '(' 	shift, and go to state 279
    '*' 	shift, and go to state 174

    decltor	go to state 237
    direct_decltor	go to state 176
    pointer	go to state 281
    abstract_decltor	go to state 297
    direct_abstract_decltor	go to state 283



state 280

    para_decl  ->  type_spec decltor .   (rule 85)

    $default	reduce using rule 85 (para_decl)



state 281

    decltor  ->  pointer . direct_decltor   (rule 73)
    abstract_decltor  ->  pointer .   (rule 88)
    abstract_decltor  ->  pointer . direct_abstract_decltor   (rule 90)

    IDENT	shift, and go to state 172
    '[' 	shift, and go to state 278
    '(' 	shift, and go to state 279

    $default	reduce using rule 88 (abstract_decltor)

    direct_decltor	go to state 242
    direct_abstract_decltor	go to state 298



state 282

    para_decl  ->  type_spec abstract_decltor .   (rule 86)

    $default	reduce using rule 86 (para_decl)



state 283

    abstract_decltor  ->  direct_abstract_decltor .   (rule 89)
    direct_abstract_decltor  ->  direct_abstract_decltor . '[' ']'   (rule 94)
    direct_abstract_decltor  ->  direct_abstract_decltor . '[' const_expr ']'   (rule 95)
    direct_abstract_decltor  ->  direct_abstract_decltor . '(' para_type_list ')'   (rule 96)

    '[' 	shift, and go to state 299
    '(' 	shift, and go to state 300

    $default	reduce using rule 89 (abstract_decltor)



state 284

    direct_decltor  ->  direct_decltor '(' para_type_list ')' .   (rule 78)

    $default	reduce using rule 78 (direct_decltor)



state 285

    para_type_list  ->  parameter_list ',' . DOTS   (rule 82)

    DOTS	shift, and go to state 301



state 286

    parameter_list  ->  para_decl ',' . parameter_list   (rule 84)

    CHAR	shift, and go to state 83
    VOID	shift, and go to state 84
    SHORT	shift, and go to state 85
    INT 	shift, and go to state 86
    LONG	shift, and go to state 87
    FLOAT	shift, and go to state 88
    DOUBLE	shift, and go to state 89
    SIGNED	shift, and go to state 90
    UNSIGNED	shift, and go to state 91

    type_spec	go to state 263
    parameter_list	go to state 302
    para_decl	go to state 266



state 287

    prim_expr  ->  FUN '(' identlst ')' '{' blockbody '}' .   (rule 159)

    $default	reduce using rule 159 (prim_expr)



state 288

    if_stmt  ->  IF '(' expr ')' stmt ELSE stmt .   (rule 40)

    $default	reduce using rule 40 (if_stmt)



state 289

    do_stmt  ->  DO stmt WHILE '(' expr ')' ';' .   (rule 42)

    $default	reduce using rule 42 (do_stmt)



state 290

    for_stmt  ->  FOR '(' expr ';' expr ';' expr . ')' stmt   (rule 43)
    expr  ->  expr . ',' assign_expr   (rule 98)

    ',' 	shift, and go to state 110
    ')' 	shift, and go to state 303



state 291

    case_clause  ->  ELSE ':' . stmt   (rule 53)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 304
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 292

    case_clause_list  ->  case_clause case_clause_list .   (rule 55)

    $default	reduce using rule 55 (case_clause_list)



state 293

    case_stmt  ->  CASE '(' expr ')' '{' case_clause_list '}' .   (rule 51)

    $default	reduce using rule 51 (case_stmt)



state 294

    case_clause  ->  assign_expr_list ':' . stmt   (rule 52)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 305
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 295

    direct_abstract_decltor  ->  '[' ']' .   (rule 92)

    $default	reduce using rule 92 (direct_abstract_decltor)



state 296

    direct_abstract_decltor  ->  '[' const_expr . ']'   (rule 93)

    ']' 	shift, and go to state 306



state 297

    direct_abstract_decltor  ->  '(' abstract_decltor . ')'   (rule 91)

    ')' 	shift, and go to state 307



state 298

    abstract_decltor  ->  pointer direct_abstract_decltor .   (rule 90)
    direct_abstract_decltor  ->  direct_abstract_decltor . '[' ']'   (rule 94)
    direct_abstract_decltor  ->  direct_abstract_decltor . '[' const_expr ']'   (rule 95)
    direct_abstract_decltor  ->  direct_abstract_decltor . '(' para_type_list ')'   (rule 96)

    '[' 	shift, and go to state 299
    '(' 	shift, and go to state 300

    $default	reduce using rule 90 (abstract_decltor)



state 299

    direct_abstract_decltor  ->  direct_abstract_decltor '[' . ']'   (rule 94)
    direct_abstract_decltor  ->  direct_abstract_decltor '[' . const_expr ']'   (rule 95)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    '[' 	shift, and go to state 18
    ']' 	shift, and go to state 308
    '(' 	shift, and go to state 19
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    const_expr	go to state 309
    logical_or_expr	go to state 220
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 101
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 300

    direct_abstract_decltor  ->  direct_abstract_decltor '(' . para_type_list ')'   (rule 96)

    CHAR	shift, and go to state 83
    VOID	shift, and go to state 84
    SHORT	shift, and go to state 85
    INT 	shift, and go to state 86
    LONG	shift, and go to state 87
    FLOAT	shift, and go to state 88
    DOUBLE	shift, and go to state 89
    SIGNED	shift, and go to state 90
    UNSIGNED	shift, and go to state 91

    type_spec	go to state 263
    para_type_list	go to state 310
    parameter_list	go to state 265
    para_decl	go to state 266



state 301

    para_type_list  ->  parameter_list ',' DOTS .   (rule 82)

    $default	reduce using rule 82 (para_type_list)



state 302

    parameter_list  ->  para_decl ',' parameter_list .   (rule 84)

    $default	reduce using rule 84 (parameter_list)



state 303

    for_stmt  ->  FOR '(' expr ';' expr ';' expr ')' . stmt   (rule 43)

    IDENT	shift, and go to state 1
    STRING	shift, and go to state 2
    CHAR	shift, and go to state 3
    NUMBER	shift, and go to state 4
    TRUE_OBJ	shift, and go to state 5
    FALSE_OBJ	shift, and go to state 6
    INC 	shift, and go to state 7
    DEC 	shift, and go to state 8
    FUN 	shift, and go to state 57
    IF  	shift, and go to state 11
    WHILE	shift, and go to state 12
    DO  	shift, and go to state 13
    FOR 	shift, and go to state 14
    RETURN	shift, and go to state 67
    BREAK	shift, and go to state 68
    COND	shift, and go to state 15
    CASE	shift, and go to state 16
    '[' 	shift, and go to state 18
    '(' 	shift, and go to state 19
    '{' 	shift, and go to state 20
    '*' 	shift, and go to state 21
    '&' 	shift, and go to state 22
    '+' 	shift, and go to state 23
    '-' 	shift, and go to state 24
    '~' 	shift, and go to state 25
    '!' 	shift, and go to state 26
    '#' 	shift, and go to state 27
    '\''	shift, and go to state 28

    stmt	go to state 311
    block	go to state 70
    if_stmt	go to state 71
    while_stmt	go to state 72
    do_stmt	go to state 73
    for_stmt	go to state 74
    return_stmt	go to state 75
    break_stmt	go to state 76
    cond_stmt	go to state 77
    case_stmt	go to state 78
    expr	go to state 79
    assign_expr	go to state 41
    logical_or_expr	go to state 42
    logical_and_expr	go to state 43
    or_expr	go to state 44
    xor_expr	go to state 45
    and_expr	go to state 46
    equality_expr	go to state 47
    relation_expr	go to state 48
    shift_expr	go to state 49
    additive_expr	go to state 50
    multiplic_expr	go to state 51
    cast_expr	go to state 52
    unary_expr	go to state 53
    postfix_expr	go to state 54
    prim_expr	go to state 55
    literal	go to state 56



state 304

    case_clause  ->  ELSE ':' stmt .   (rule 53)

    $default	reduce using rule 53 (case_clause)



state 305

    case_clause  ->  assign_expr_list ':' stmt .   (rule 52)

    $default	reduce using rule 52 (case_clause)



state 306

    direct_abstract_decltor  ->  '[' const_expr ']' .   (rule 93)

    $default	reduce using rule 93 (direct_abstract_decltor)



state 307

    direct_abstract_decltor  ->  '(' abstract_decltor ')' .   (rule 91)

    $default	reduce using rule 91 (direct_abstract_decltor)



state 308

    direct_abstract_decltor  ->  direct_abstract_decltor '[' ']' .   (rule 94)

    $default	reduce using rule 94 (direct_abstract_decltor)



state 309

    direct_abstract_decltor  ->  direct_abstract_decltor '[' const_expr . ']'   (rule 95)

    ']' 	shift, and go to state 312



state 310

    direct_abstract_decltor  ->  direct_abstract_decltor '(' para_type_list . ')'   (rule 96)

    ')' 	shift, and go to state 313



state 311

    for_stmt  ->  FOR '(' expr ';' expr ';' expr ')' stmt .   (rule 43)

    $default	reduce using rule 43 (for_stmt)



state 312

    direct_abstract_decltor  ->  direct_abstract_decltor '[' const_expr ']' .   (rule 95)

    $default	reduce using rule 95 (direct_abstract_decltor)



state 313

    direct_abstract_decltor  ->  direct_abstract_decltor '(' para_type_list ')' .   (rule 96)

    $default	reduce using rule 96 (direct_abstract_decltor)



state 314

    $   	go to state 315



state 315

    $   	go to state 316



state 316

    $default	accept
